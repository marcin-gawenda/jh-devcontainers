services:
  devcontainer:
    image: mcr.microsoft.com/vscode/devcontainers/java:0-17-bullseye
    container_name: devcontainer
    environment:
      #- _JAVA_OPTIONS=-Xmx512m -Xms256m
      - SPRING_PROFILES_ACTIVE=dev,api-docs
      - MANAGEMENT_PROMETHEUS_METRICS_EXPORT_ENABLED=false
      - SPRING_CLOUD_CONSUL_HOST=consul
      - SPRING_CLOUD_CONSUL_PORT=8500
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgresql:5432/jhDevcontainers
      - SPRING_LIQUIBASE_URL=jdbc:postgresql://postgresql:5432/jhDevcontainers
      - SPRING_SECURITY_OAUTH2_CLIENT_PROVIDER_OIDC_ISSUER_URI=http://keycloak:9080/realms/jhipster
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_ID=internal
      - SPRING_SECURITY_OAUTH2_CLIENT_REGISTRATION_OIDC_CLIENT_SECRET=internal
      - SPRING_CLOUD_STREAM_KAFKA_BINDER_BROKERS=kafka:9092
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    external_links:
      - dev-consul:consul
      - dev-keycloak:keycloak
      - dev-postgresql:postgresql
      - dev-kafka:kafka
    volumes:
      - ..:/workspace/jh-devcontainers
    command: sleep infinity
  dev-postgresql:
    container_name: dev-postgresql
    extends:
      file: ../src/main/docker/postgresql.yml
      service: postgresql
  dev-keycloak:
    container_name: dev-keycloak
    extends:
      file: ../src/main/docker/keycloak.yml
      service: keycloak
  dev-consul:
    container_name: dev-consul
    extends:
      file: ../src/main/docker/consul.yml
      service: consul
  dev-consul-config-loader:
    container_name: dev-consul-config-loader
    extends:
      file: ../src/main/docker/consul.yml
      service: consul-config-loader
    external_links:
      - dev-consul:consul
  dev-kafka:
    container_name: dev-kafka
    extends:
      file: ../src/main/docker/kafka.yml
      service: kafka

networks:
  default:
    driver: bridge # overlay # requires docker swarn, https://blog.docker.com/2016/12/understanding-docker-networking-drivers-use-cases/
    enable_ipv6: false
    ipam:
      driver: default
      config:
        - subnet: 172.25.0.0/16
          gateway: 172.25.0.1



#  keycloak:
#    image: quay.io/keycloak/keycloak:26.2.3
#    command: 'start-dev --import-realm'
#    volumes:
#      - ./realm-config:/opt/keycloak/data/import
#      - ./realm-config/keycloak-health-check.sh:/opt/keycloak/health-check.sh
#    environment:
#      - KC_DB=dev-file
#      - KEYCLOAK_ADMIN=admin
#      - KEYCLOAK_ADMIN_PASSWORD=admin
#      - KC_FEATURES=scripts
#      - KC_HTTP_PORT=9080
#      - KC_HTTPS_PORT=9443
#      - KC_HEALTH_ENABLED=true
#      - KC_HTTP_MANAGEMENT_PORT=9990
#    # If you want to expose these ports outside your dev PC,
#    # remove the "127.0.0.1:" prefix
#    ports:
#      - 127.0.0.1:9080:9080
#      - 127.0.0.1:9443:9443
#    healthcheck:
#      test: 'bash /opt/keycloak/health-check.sh'
#      interval: 5s
#      timeout: 5s
#      # Increased retries due to slow Keycloak startup in GitHub Actions using MacOS
#      retries: 50
#      start_period: 10s
#    labels:
#      org.springframework.boot.ignore: true
#
#  kafka:
#    image: apache/kafka-native:4.0.0
#    # If you want to expose these ports outside your dev PC,
#    # remove the "127.0.0.1:" prefix
#    ports:
#      - 127.0.0.1:9092:9092
#    environment:
#      KAFKA_NODE_ID: 1
#      KAFKA_PROCESS_ROLES: broker,controller
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
#      KAFKA_LISTENERS: PLAINTEXT://:9092,CONTROLLER://localhost:9093
#      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
#      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
#      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
#      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
#    labels:
#      org.springframework.boot.ignore: true
#
#  postgresql:
#    image: postgres:17.4
#    # volumes:
#    #   - ~/volumes/jhipster/jhDevcontainers/postgresql/:/var/lib/postgresql/data/
#    environment:
#      - POSTGRES_USER=jhDevcontainers
#      - POSTGRES_HOST_AUTH_METHOD=trust
#    healthcheck:
#      test: ['CMD-SHELL', 'pg_isready -U $${POSTGRES_USER}']
#      interval: 5s
#      timeout: 5s
#      retries: 10
#    # If you want to expose these ports outside your dev PC,
#    # remove the "127.0.0.1:" prefix
#    ports:
#      - 127.0.0.1:5432:5432
